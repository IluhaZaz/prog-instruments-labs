"""after str change

Revision ID: 19121ccae367
Revises: f26b3658c939
Create Date: 2024-08-13 11:51:10.012689

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "19121ccae367"
down_revision: Union[str, None] = "f26b3658c939"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "good",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("price", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("rate", sa.Numeric(precision=3, scale=2), nullable=False),
        sa.Column("seller_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["seller_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("product")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "description", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "price",
            sa.NUMERIC(precision=15, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("amount", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "rate",
            sa.NUMERIC(precision=3, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "seller_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["seller_id"], ["user.id"], name="product_seller_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="product_pkey"),
    )
    op.drop_table("good")
    # ### end Alembic commands ###
