"""role_to_role_id

Revision ID: f26b3658c939
Revises: 72ea6dcac139
Create Date: 2024-08-11 22:59:10.976686

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f26b3658c939"
down_revision: Union[str, None] = "72ea6dcac139"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "product", sa.Column("seller_id", sa.Integer(), nullable=True)
    )
    op.drop_constraint("product_seller_fkey", "product", type_="foreignkey")
    op.create_foreign_key(None, "product", "user", ["seller_id"], ["id"])
    op.drop_column("product", "seller")
    op.add_column("user", sa.Column("role_id", sa.Integer(), nullable=True))
    op.drop_constraint("user_role_fkey", "user", type_="foreignkey")
    op.create_foreign_key(
        None, "user", "role", ["role_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("user", "role")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user",
        sa.Column("role", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "user", type_="foreignkey")
    op.create_foreign_key(
        "user_role_fkey", "user", "role", ["role"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("user", "role_id")
    op.add_column(
        "product",
        sa.Column("seller", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "product", type_="foreignkey")
    op.create_foreign_key(
        "product_seller_fkey", "product", "user", ["seller"], ["id"]
    )
    op.drop_column("product", "seller_id")
    # ### end Alembic commands ###
